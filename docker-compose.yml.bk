# Production ready docker configuration
version: '2'
services:
    jhipstersamplemicroservice-app:
        image: jhipstersamplemicroservice
        environment:
            - _JAVA_OPTIONS=-Xmx512m -Xms256m
            - SPRING_PROFILES_ACTIVE=prod,swagger
            - JHIPSTER_LOGGING_LOGSTASH_ENABLED=true
            - JHIPSTER_LOGGING_LOGSTASH_HOST=jhipster-logstash
            - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED=true
            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka
            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config
            - SPRING_DATASOURCE_URL=jdbc:postgresql://jhipstersamplemicroservice-postgresql:5432/jhipsterSampleMicroservice
            - JHIPSTER_SLEEP=30 # gives time for other services to boot before the application
        ports:
            - 8081:8081
    jhipstersamplemicroservice-postgresql:
        extends:
            file: postgresql.yml
            service: jhipstersamplemicroservice-postgresql
    jhipster-registry:
        extends:
            file: jhipster-registry.yml
            service: jhipster-registry
    jhipstersamplemicroservice-prometheus:
        image: prom/prometheus:v2.18.1
        volumes:
            - ./prometheus/:/etc/prometheus/
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
            - 9090:9090
    jhipstersamplemicroservice-grafana:
        image: grafana/grafana:7.0.1
        volumes:
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_INSTALL_PLUGINS=grafana-piechart-panel
        ports:
            - 3000:3000
    jhipster-elasticsearch:
        image: jhipster/jhipster-elasticsearch:latest
        ports:
            - 9200:9200
            - 9300:9300
        # Uncomment this as well as the volume section down below
        # to have elasticsearch data persisted to a volume
        # you will need to create a named volume with `docker volume create log-data`
        #volumes:
        #   - log-data:/usr/share/elasticsearch/data

    jhipster-logstash:
        image: jhipster/jhipster-logstash:latest
        environment:
            - INPUT_TCP_PORT=5000
            - INPUT_UDP_PORT=5000
            - INPUT_HTTP_PORT=5001
            - ELASTICSEARCH_HOST=jhipster-elasticsearch
            - ELASTICSEARCH_PORT=9200
            - LOGSTASH_DEBUG=false
        ports:
            - 5000:5000
            - 5000:5000/udp
            - 5001:5001
        # Uncomment this section and add a logstash.conf file in log-conf/
        # to have logstash config loaded from a volume
        #volumes:
        #    - ./log-conf/:/usr/share/logstash/pipeline/

    jhipster-console:
        image: jhipster/jhipster-console:latest
        ports:
            - 5601:5601
        #environment:
        #    - ELASTICSEARCH_URL=http://jhipster-elasticsearch:9200

    jhipster-import-dashboards:
        image: jhipster/jhipster-import-dashboards:latest
        environment:
            - ELASTICSEARCH_URL=http://jhipster-elasticsearch:9200
        depends_on:
            - jhipster-elasticsearch

    jhipster-curator:
        image: jhipster/jhipster-curator:latest
        environment:
            - ES_HOST=jhipster-elasticsearch
            - ES_PORT=9200
            - UNIT_COUNT=14
            - UNIT=days

    jhipster-alerter:
        image: jhipster/jhipster-alerter:latest
        environment:
            - ES_HOST=jhipster-elasticsearch
            - ES_PORT=9200
        volumes:
            - ./alerts/rules/:/opt/elastalert/rules/
            - ./jhipster-alerter/config.yaml:/opt/elastalert/config.yaml

    jhipster-zipkin:
        image: jhipster/jhipster-zipkin:latest
        environment:
            - ES_HOSTS=http://jhipster-elasticsearch:9200
            # Change localhost:5601 by the URL by which your client access Kibana
            - ZIPKIN_UI_LOGS_URL=http://192.168.10.128:5601/app/kibana#/discover/d0682f20-e0e9-11e7-9c68-0b9a0f0c183c?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-30d,mode:quick,to:now))&_a=(columns:!(X-B3-TraceId,app_name,level,message),filters:!(('$state':(store:appState),meta:(alias:!n,disabled:!f,index:'logs-*',key:X-B3-TraceId,negate:!f,params:(query:'trace',type:phrase),type:phrase,value:'trace'),query:(match:(X-B3-TraceId:(query:'{traceId}',type:phrase))))),index:'logs-*',interval:auto,query:(language:lucene,query:''),sort:!('@timestamp',desc))
        ports:
            - 9411:9411

# Uncomment to use the log-data volume
# volumes:
#     log-data:
#         driver: local
